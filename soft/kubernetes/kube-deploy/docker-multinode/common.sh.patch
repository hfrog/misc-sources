--- common.sh.orig	2016-11-07 15:48:34.256521687 +0300
+++ common.sh	2017-05-05 20:20:45.186908617 +0300
@@ -37,6 +37,7 @@
   fi
 
   LATEST_STABLE_K8S_VERSION=$(curl -sSL "https://storage.googleapis.com/kubernetes-release/release/stable.txt")
+  LATEST_STABLE_K8S_VERSION='v1.6.2-qiwi.1'
   K8S_VERSION=${K8S_VERSION:-${LATEST_STABLE_K8S_VERSION}}
 
   CURRENT_PLATFORM=$(kube::helpers::host_platform)
@@ -45,7 +46,7 @@
   if [[ ${ARCH} == "arm" ]]; then
     ETCD_VERSION=${ETCD_VERSION:-"2.2.5"}
   else
-    ETCD_VERSION=${ETCD_VERSION:-"3.0.4"}
+    ETCD_VERSION=${ETCD_VERSION:-"3.0.17"}
   fi
 
   FLANNEL_VERSION=${FLANNEL_VERSION:-"v0.6.1"}
@@ -86,16 +87,24 @@
     ${KUBELET_MOUNT} \
     -v /var/log/containers:/var/log/containers:rw"
 
+  if [[ ${USE_CNI} == "true" ]]; then
+    KUBELET_MOUNTS="\
+      ${KUBELET_MOUNTS} \
+      -v /etc/cni/net.d:/etc/cni/net.d:rw \
+      -v /opt/cni/bin:/opt/cni/bin:rw"
+  fi
+
   # Paths
   FLANNEL_SUBNET_DIR=${FLANNEL_SUBNET_DIR:-/run/flannel}
 
   if [[ ${USE_CNI} == "true" ]]; then
 
     BOOTSTRAP_DOCKER_PARAM=""
-    ETCD_NET_PARAM="-p 2379:2379 -p 2380:2380 -p 4001:4001"
+    ETCD_NET_PARAM="-p 2379:2379 -p 2380:2380"
     CNI_ARGS="\
       --network-plugin=cni \
-      --network-plugin-dir=/etc/cni/net.d"
+      --cni-conf-dir=/etc/cni/net.d \
+      --cni-bin-dir=/opt/cni/bin"
   fi
 }
 
@@ -125,7 +134,6 @@
 
   kube::log::status "Launching etcd..."
 
-  # TODO: Remove the 4001 port as it is deprecated
   docker ${BOOTSTRAP_DOCKER_PARAM} run -d \
     --name kube_etcd_$(kube::helpers::small_sha) \
     --restart=${RESTART_POLICY} \
@@ -133,8 +141,10 @@
     -v /var/lib/kubelet/etcd:/var/etcd \
     gcr.io/google_containers/etcd-${ARCH}:${ETCD_VERSION} \
     /usr/local/bin/etcd \
-      --listen-client-urls=http://0.0.0.0:2379,http://0.0.0.0:4001 \
-      --advertise-client-urls=http://localhost:2379,http://localhost:4001 \
+      --initial-advertise-peer-urls=http://192.168.209.138:2379 \
+      --initial-cluster=default=http://192.168.209.138:2379 \
+      --listen-client-urls=http://0.0.0.0:2379 \
+      --advertise-client-urls=http://192.168.209.138:2379 \
       --listen-peer-urls=http://0.0.0.0:2380 \
       --data-dir=/var/etcd/data
 
@@ -208,11 +218,11 @@
     --restart=${RESTART_POLICY} \
     --name kube_kubelet_$(kube::helpers::small_sha) \
     ${KUBELET_MOUNTS} \
-    gcr.io/google_containers/hyperkube-${ARCH}:${K8S_VERSION} \
+    dcr.qiwi.com/hyperkube-${ARCH}:${K8S_VERSION} \
     /hyperkube kubelet \
       --allow-privileged \
       --api-servers=http://localhost:8080 \
-      --config=/etc/kubernetes/manifests-multi \
+      --pod-manifest-path=/etc/kubernetes/manifests-multi \
       --cluster-dns=10.0.0.10 \
       --cluster-domain=cluster.local \
       ${CNI_ARGS} \
@@ -236,7 +246,7 @@
     --restart=${RESTART_POLICY} \
     --name kube_kubelet_$(kube::helpers::small_sha) \
     ${KUBELET_MOUNTS} \
-    gcr.io/google_containers/hyperkube-${ARCH}:${K8S_VERSION} \
+    dcr.qiwi.com/hyperkube-${ARCH}:${K8S_VERSION} \
     /hyperkube kubelet \
       --allow-privileged \
       --api-servers=http://${MASTER_IP}:8080 \
@@ -257,7 +267,7 @@
     --privileged \
     --name kube_proxy_$(kube::helpers::small_sha) \
     --restart=${RESTART_POLICY} \
-    gcr.io/google_containers/hyperkube-${ARCH}:${K8S_VERSION} \
+    dcr.qiwi.com/hyperkube-${ARCH}:${K8S_VERSION} \
     /hyperkube proxy \
         --master=http://${MASTER_IP}:8080 \
         --v=2
@@ -308,10 +318,6 @@
         ;;
     esac
   fi
-
-  # Remove cni0 bridge if K8S_VERSION = v1.4.0-alpha.2
-  # With versions above that, it's not required. TODO: Remove this later
-  kube::multinode::delete_bridge cni0
 }
 
 kube::multinode::delete_bridge() {
@@ -388,7 +394,7 @@
 }
 
 kube::helpers::parse_version() {
-  local -r version_regex="^v(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(-(beta|alpha)\\.(0|[1-9][0-9]*))?$"
+  local -r version_regex="^v(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(-(beta|alpha|qiwi)\\.(0|[1-9][0-9]*))?$"
   local -r version="${1-}"
   [[ "${version}" =~ ${version_regex} ]] || {
     kube::log::fatal "Invalid release version: '${version}', must match regex ${version_regex}"
